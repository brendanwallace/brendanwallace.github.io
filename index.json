[{"content":"Hi! I\u0026rsquo;m a PhD student at the University of Washington (UW) in the Quantitative Ecology and Resource Management (QERM) program, part of the Complex Ecological Systems Lab. I\u0026rsquo;m interested in complex systems, network science, and general patterns in movement in animals and people. Before UW, I modeled road traffic for Google maps.\nI think a lot about teaching and learning: there are some great teachers out there but I think we regularly get a lot of things wrong. I have strong opinions about programming and teaching programming. I coach Ultimate frisbee for Lakeside school and play for (and founded) Switchback ultimate. I like to talk about how cars ruin cities, and how we\u0026rsquo;d be much better off if we prioritized density, walking, biking and transit instead.\n","date":"April 16, 2024","permalink":"/","section":"About me","summary":"Hi! I\u0026rsquo;m a PhD student at the University of Washington (UW) in the Quantitative Ecology and Resource Management (QERM) program, part of the Complex Ecological Systems Lab. I\u0026rsquo;m interested in complex systems, network science, and general patterns in movement in animals and people.","title":"About me"},{"content":"","date":"April 16, 2024","permalink":"/blog/","section":"Blog","summary":"","title":"Blog"},{"content":"Not done: # go on an overnight bike trip go to santa fe institute\u0026rsquo;s graduate summer workshop tube on a river float on green lake Done: # buy a new bike play beach volleyball plant clover lay down woodchips in my front garden ","date":"April 15, 2024","permalink":"/blog/summer-2024-bucket-list/","section":"Blog","summary":"Not done: # go on an overnight bike trip go to santa fe institute\u0026rsquo;s graduate summer workshop tube on a river float on green lake Done: # buy a new bike play beach volleyball plant clover lay down woodchips in my front garden ","title":"my summer 2024 bucket list"},{"content":"Instructions # Read DCIC section §3.1 \u0026amp; §3.2: https://dcic-world.org/2023-02-21/getting-started.html. The main ideas (and what I\u0026rsquo;ll cover if we meet up) are:\nsetting up Pyret types (numbers, strings, images) \u0026amp; values operations \u0026amp; expressions definitions (i.e. naming values) Go to https://code.pyret.org/ in a browser and create a Pyret file called exploring.arr. Spend a little time familiarizing yourself with the interface, following along with the textbook and exploring.\nWhen you\u0026rsquo;re ready, create a new Pyret file called flags.arr. Add a series of expressions to your file such that, when the file is Run, the following flags appear in order in the interactions area:\nVietnam Chile Suriname Turkey (optional) Saint Lucia Create these flag images using the Pyret image primitives (rectangle, star, etc.), and the image manipulation functions (overlay, above, etc.). You should use a web search to figure out what the flags look like. You will need to read the Pyret Image Documentation to find \u0026ldquo;other functions\u0026rdquo; to make the Turkey and Saint Lucia flags.\nThe flags should have width of at least 100, but not be so large that you need to scroll a lot to see them all. They don\u0026rsquo;t need to be exactly right or match the colors perfectly (but you\u0026rsquo;re welcome to spend as much time as you like making them more accurate).\nDownload your flags.arr file and email it to me in a reply to the week 1 email.\n","date":"January 1, 0001","permalink":"/teaching/qsci256/assignments/assignment1/","section":"Teaching","summary":"Instructions # Read DCIC section §3.1 \u0026amp; §3.2: https://dcic-world.org/2023-02-21/getting-started.html. The main ideas (and what I\u0026rsquo;ll cover if we meet up) are:\nsetting up Pyret types (numbers, strings, images) \u0026amp; values operations \u0026amp; expressions definitions (i.","title":"Assignment 1 - Flags"},{"content":"Instructions # Read DCIC section §3.3 \u0026amp; §3.4 https://dcic-world.org/. The main ideas are:\nconditions \u0026amp; booleans repeated expressions to functions docstrings, testing and the design contract So far, we\u0026rsquo;ve encountered values, such as a particular images, numbers or strings; and expressions, which are combinations of operations and values that evaluate to single values.\nFor all of the problems in this assignment (and for most of the rest of the assignments), your task will be to write one or more functions, programming constructs that allows you to reuse expressions with different inputs (called parameters) to solve particular problems.\nProblems # Warmup # Create a Pyret file called flags2.arr. Write a function called vietnam-custom that takes two parameters first-color and second-color, and evaluates to the Vietnam flag if those parameters are \u0026ldquo;red\u0026rdquo; and \u0026ldquo;yellow\u0026rdquo;, or to an identically structured flag with different colors otherwise.\nAdd a second function chile-custom that does the same thing for the Chilean flag. (You do not need to include doc-strings or where blocks for these functions.)\nOptional: include your favorite custom-color redesign of one of these flags.\nFunctions with doc-strings and where blocks # For the remainder of these problems, include a doc-string explaining briefly what the function does, and 2-6 examples in a where block.\nCreate a Pyret file called weightlifting.arr. Write a function called bar-weight that takes arguments num-plates, and evaluates to the weight in pounds of a 20kg bar with num-plates number of 20kg plates. Use an approximate conversion such that one kg is 2.2 pounds, and check that an empty bar weighs 44 pounds, and a bar with two plates weighs 132 pounds.\nIn weightlifting.arr, add a function called bar-weight-custom that takes arguments bar of \u0026ldquo;w\u0026rdquo; or \u0026ldquo;m\u0026rdquo; for a women\u0026rsquo;s 15kg or a men\u0026rsquo;s 20kg bar respectively, and num-plates number of 20kg plates, and evaluates to the number of pounds the bar weighs.\nCreate a Pyret file called cookies.arr. Write a function called is-cookie-good that takes arguments flour, sugar, butter, and nuts (all measured in cups) and evaluates to a boolean of whether a cookie made using that amount (in cups) of ingredients is good.\nHow can you tell whether a cookie is good? For starters, there should be more flour than sugar and butter combined (or it will fall apart). Next, consider the ratios of nuts to butter (\u0026ldquo;crunchiness\u0026rdquo;), sugar to flour (\u0026ldquo;sweetness\u0026rdquo;), and butter to sugar (\u0026ldquo;savoriness\u0026rdquo;). To be good, a cookie requires sweetness of at least 1/3, savoriness at least 2, and crunchiness at least 1/2.\nTo test your function, make sure a cookie in the 3:2:1 ratio (3 cups flour, 2 cups butter, 1 cup sugar) with 1 cup of nuts is good. Make sure that a common cake recipe with 2 cups of flour, butter and sugar each (with no nuts) is not a good cookie.\nTurn in # Download your files flags2.arr, weightlifting.arr and cookies.arr files and email them to me.\n","date":"January 1, 0001","permalink":"/teaching/qsci256/assignments/assignment2/","section":"Teaching","summary":"Instructions # Read DCIC section §3.3 \u0026amp; §3.4 https://dcic-world.org/. The main ideas are:\nconditions \u0026amp; booleans repeated expressions to functions docstrings, testing and the design contract So far, we\u0026rsquo;ve encountered values, such as a particular images, numbers or strings; and expressions, which are combinations of operations and values that evaluate to single values.","title":"Assignment 2 - Functions \u0026 Conditionals"},{"content":"Tables # Read §4.1 in DCIC.\nTable Problems # Create a file called tables.arr.\nInclude the following table definitions (from the textbook) in your definitions panel:\npeople = table: name, age row: \u0026quot;Alicia\u0026quot;, 30 row: \u0026quot;Meihui\u0026quot;, 40 row: \u0026quot;Jamal\u0026quot;, 25 end shuttle = table: month, riders row: \u0026quot;Jan\u0026quot;, 1123 row: \u0026quot;Feb\u0026quot;, 1045 row: \u0026quot;Mar\u0026quot;, 1087 row: \u0026quot;Apr\u0026quot;, 999 end Write function is-winter that takes a Row r with a \u0026ldquo;month\u0026rdquo; column as input and produces a Boolean indicating whether the month in that row is one of \u0026ldquo;Jan\u0026rdquo;, \u0026ldquo;Feb\u0026rdquo;, or \u0026ldquo;Mar\u0026rdquo;.\nWrite function low-winter that takes a Row r with both \u0026ldquo;month\u0026rdquo; and \u0026ldquo;riders\u0026rdquo; columns and produces a Boolean indicating whether the row is a winter row with fewer than 1050 riders.\nWrite function oldest that takes a Table with columns \u0026ldquo;name\u0026rdquo; and \u0026ldquo;age\u0026rdquo;, and produces the \u0026ldquo;name\u0026rdquo; of the \u0026ldquo;row\u0026rdquo; with the largest \u0026ldquo;age\u0026rdquo;.\nLists # You should reference §5.2 in DCIC for techniques to solve the problems in this section, but you\u0026rsquo;ll just need to know and use the following.\nLists are a data type that take one of two forms:\nempty, or link(first, rest). The list empty is just that: a list with nothing in it. A list made with link(first, rest) contains two parts: first is any value (a number, string, boolean, etc) and rest is a list.\nSo for example, a list of the numbers 1, 2, and 3 in Pyret is written as,\nlink(1, link(2, link(3, empty))).\n(The textbook introduces a shorthand way to write lists that looks like `[list: 1, 2, 3], which we will use in the future but you should ignore for now.)\nGiven a list, you can process it using a cases expression:\ncases (List) l: | empty =\u0026gt; [ expression 1 ] | link(f, r) =\u0026gt; [ expression 2 ] end If the list l is the empty list, the outer expression will evaluate to expression 1. If l is not the empty list, the cases expression will evaluate to expression 2, in which the values f and r are available.\nSo for example, the following expression will evaluate to one of two strings depending on whether l is empty.\ncases (List) l: | empty =\u0026gt; \u0026quot;this list is empty\u0026quot; | link(f, r) =\u0026gt; \u0026quot;this list is not empty\u0026quot; end To deal with the recursive nature of lists (a list which is not empty contains another list), you can use function recursion by calling a function from within that function itself.\nFor example, the following function will compute the length of a list.\nfun my-len(l :: List) -\u0026gt; Number: cases (List) l: | empty =\u0026gt; 0 | link(f, r) =\u0026gt; 1 + my-len(r) end end If we called this function on our example list link(1, link(2, link(3, empty))) the evaluation would proceed like this:\nmy-len(link(1, link(2, link(3, empty)))) =\u0026gt; 1 + my-len(link(2, link(3, empty))) =\u0026gt; 1 + 1 + my-len(link(3, empty)) =\u0026gt; 1 + 1 + 1 + my-len(empty) =\u0026gt; 1 + 1 + 1 + 0 =\u0026gt; 3 List problems # Create a file called lists.arr.\nWrite function my-sum that takes as input a list of numbers and evaluates to the sum of the numbers of the list.\nWrite function exclaim that takes a list of strings, and adds \u0026ldquo;!\u0026rdquo; to the end of them. (To concatenate two strings together, use the + operator. For example, \u0026quot;hi\u0026quot; + \u0026quot;!\u0026quot; evaluates to \u0026quot;hi!\u0026quot;.)\nWrite function first-n that takes a list l and a number n, and evaluates to a list made of only the first n elements of l (or the whole list l if n is greater than the length of l.)\nWrite function insert-nth that takes a list l, a number n and a value e, and evaluates to the list l with element e inserted after the first n elements (or at the end, if there are fewer than n elements in l).\nWrite function find-element that takes a list l and an element e that is in l, and evaluates to the first position at which e occurs in the list l. For example, find-element(link(1, link(2, link(3, empty))), 2) = 1. If the element doesn\u0026rsquo;t exist in the list, you may return whatever value you\u0026rsquo;d like or raise an error.\nHint: you may want to write a helper function with an acculumating index.\nTurn in # Make sure that all your functions include a docstring and a sufficient number of test cases.\nDownload your files tables.arr and lists.arr and email them to me.\n","date":"January 1, 0001","permalink":"/teaching/qsci256/assignments/assignment3/","section":"Teaching","summary":"Tables # Read §4.1 in DCIC.\nTable Problems # Create a file called tables.arr.\nInclude the following table definitions (from the textbook) in your definitions panel:\npeople = table: name, age row: \u0026quot;Alicia\u0026quot;, 30 row: \u0026quot;Meihui\u0026quot;, 40 row: \u0026quot;Jamal\u0026quot;, 25 end shuttle = table: month, riders row: \u0026quot;Jan\u0026quot;, 1123 row: \u0026quot;Feb\u0026quot;, 1045 row: \u0026quot;Mar\u0026quot;, 1087 row: \u0026quot;Apr\u0026quot;, 999 end Write function is-winter that takes a Row r with a \u0026ldquo;month\u0026rdquo; column as input and produces a Boolean indicating whether the month in that row is one of \u0026ldquo;Jan\u0026rdquo;, \u0026ldquo;Feb\u0026rdquo;, or \u0026ldquo;Mar\u0026rdquo;.","title":"Assignment 3 - Tables \u0026 Lists"},{"content":" ","date":"January 1, 0001","permalink":"/teaching/qsci256/assignments/","section":"Teaching","summary":" ","title":"Assignments"},{"content":"Recommendations # Land use and transportation # Stroads by Not Just Bikes. Something can be a road – fast way to get between places \u0026ndash; or a street – comfortable, human-scale for accessing places. Build something to be both and it succeeds at neither. The trouble with minimum parking requirements by Donald C. Shoup Barcelona Superblocks by The War on Cars with David Roberts, about how North American cities lack public spaces, which make us lonely. Teaching \u0026amp; learning # The Case Against Grades by Alfie Kohn or A Mathematician\u0026rsquo;s Lament by Paul Lockhart, about taking the joy out of learning. To the members of the Budget Council by Edsger W. Dijkstra on teaching elegant languages to new programmers. The Mundanity of Excellence by Daniel F. Chambliss on why are some people better at some things than others. Sociology/Psychology. # What Shamu taught me about a happy marriage by Amy Sutherland. Treat other people like they\u0026rsquo;re exotic animals and you\u0026rsquo;re an exotic animal trainer \u0026ndash; imperative to master for coaching youth sports. An Overview of the Schwartz Theory of Basic Human Values by Shalom H. Schwartz, about the consistent form of human values. ","date":"January 1, 0001","permalink":"/links/","section":"About me","summary":"Recommendations # Land use and transportation # Stroads by Not Just Bikes. Something can be a road – fast way to get between places \u0026ndash; or a street – comfortable, human-scale for accessing places.","title":"Links"},{"content":" rosebudthorn.games crossword puzzles with download links ","date":"January 1, 0001","permalink":"/projects/","section":"About me","summary":" rosebudthorn.games crossword puzzles with download links ","title":"Projects"},{"content":" ","date":"January 1, 0001","permalink":"/teaching/qsci256/","section":"Teaching","summary":" ","title":"QSCI 256"},{"content":"Dissertation # My dissertation research is focused on general patterns in mobility and its applications for epidemiology, ecology, and sociology.\nI apply patterns in mobility to model diseases that spread in high-risk locations.\nI investigate emergent animal transportation networks and a class of models called \u0026ldquo;active walkers\u0026rdquo; - agents which move through a 2-dimensional space and modify the path they walk on to leave a trail which makes it attractive for others to walk the same way.\nI\u0026rsquo;m working to expand upon the approach taken in The scales of human mobility, to look for scales in animal mobility, and to investigate anthropological invariants.\nSelected publications # Althouse, B.M., Wallace, B., Case, B.K.M. et al. The unintended consequences of inconsistent closure policies and mobility restrictions during epidemics. BMC Global Public Health 1, 28 (2023). https://doi.org/10.1186/s44263-023-00028-z\nM. Nunkesser, B. Wallace, S. Stylianidou, inventors; Google Llc., applicant; Machine learning model for predicting speed based on vehicle type; World Patent WO 2019/112566 A1, filed December 5, 2017, and issued June 13, 2019.\n","date":"January 1, 0001","permalink":"/research/","section":"About me","summary":"Dissertation # My dissertation research is focused on general patterns in mobility and its applications for epidemiology, ecology, and sociology.\nI apply patterns in mobility to model diseases that spread in high-risk locations.","title":"Research"},{"content":"Teaching experience # I\u0026rsquo;ve been a teaching assistant for math, computer science and ecology classes at Brown University and the University of Washington.\nQSCI 292 - Integral Calculus at UW in which I wrote the homework assignments, co-wrote exams, and delivered two weeks\u0026rsquo; lectures.\nQSCI 454 - Graduate level Quantitative Ecology at UW\nCSE 403 \u0026amp; CSE 503 - Undergraduate \u0026amp; Graduate level Software Engineering at UW\nMath 124 \u0026amp; 125 - Calculus 1 and 2 at UW\nCS 17 - Integrated Introduction to Computer Science at Brown University, in which I helped write assignments and develop grading rubrics.\nAdvanced Calculus assignments # I wrote a series of 5 optional \u0026ldquo;advanced\u0026rdquo; homework assignments for introductory Calculus II QSCI 292 at UW. Here\u0026rsquo;s the introduction to the first of them:\nThis is the first in a series of 5 \u0026ldquo;advanced\u0026rdquo; homework assignments that explore taylor series, the number $e$, imaginary numbers, and finally euler\u0026rsquo;s equation for $e^{i x}$. These ideas are some of the most beautiful and profound ones in all of mathematics; they run through and tie together everything else we do in calculus.\nThese assignments test a theory I have: that while we cordone some topics off as \u0026ldquo;too advanced\u0026rdquo;, they\u0026rsquo;re actually not that hard to start to learn with a gentle introduction; and they\u0026rsquo;re worth the effort. More practically, everyone comes to a class from a different starting place, and with a different learning style. These assignments give you an option to customize your experience: in exchange for doing a little more work you\u0026rsquo;ll learn more (and maybe in a way that works better for you), and you\u0026rsquo;ll have more control over your schedule and pacing for the quarter.\nIf you want to check them out they\u0026rsquo;re available here: #1, #2, #3, #4, #5\n","date":"January 1, 0001","permalink":"/teaching/","section":"Teaching","summary":"Teaching experience # I\u0026rsquo;ve been a teaching assistant for math, computer science and ecology classes at Brown University and the University of Washington.\nQSCI 292 - Integral Calculus at UW in which I wrote the homework assignments, co-wrote exams, and delivered two weeks\u0026rsquo; lectures.","title":"Teaching"},{"content":"","date":"January 1, 0001","permalink":"/topics/","section":"Topics","summary":"","title":"Topics"}]